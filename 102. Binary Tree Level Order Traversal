/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ans = new LinkedList<List<Integer>>();
        LinkedList<TreeNode> queue = new LinkedList<TreeNode>();
        // Corner case
        if (root == null) return ans;
        queue.add(root);
        queue.add(null);
        while (!queue.isEmpty()) {
            List<Integer> row = new LinkedList<Integer>();
            TreeNode node;
            while ((node = queue.remove()) != null) {
                row.add(node.val);
                if (node.left != null) queue.add(node.left);
                if (node.right != null) queue.add(node.right);
            }
            // Add the flag for the current row
            if (!queue.isEmpty()) queue.add(null);
            ans.add(row);
        }
        return ans;
    }
}
